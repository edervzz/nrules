{
    "swagger": "2.0",
    "info": {
        "title": " NRule - Rules Engine API",
        "version": "0.0.0",
        "description": "Rules Engine built for Gentera.\n t - Tenancy\n nr - NRule"
    },
    "paths": {
        "/nr/api/v1/t/{tid}/rules": {
            "post": {
                "summary": "Create a new rule including initial parameters.",
                "tags": [
                    "Rules"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "$ref": "#/parameters/TenantID"
                    },
                    {
                        "name": "Rule Information",
                        "in": "body",
                        "description": "Rule information.",
                        "required": false,
                        "schema": {                            
                            "$ref": "#/definitions/NewRule"
                        }    
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Rule Created"
                    },
                    "400": {
                        "description": "Validation errors"
                    },
                    "409": {
                        "description": "Rule already exists"
                    }
                }
            },
            "get": {
                "summary": "Read all rules by page.",
                "tags": [
                    "Rules"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "$ref": "#/parameters/TenantID"
                    },
                    {
                        "$ref": "#/parameters/PageNo"
                    },
                    {
                        "$ref": "#/parameters/PageSize"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Rules detail"
                    },
                    "400": {
                        "description": "Validation errors"
                    },
                    "404": {
                        "description": "Rules not found"
                    }
                }
            }
        },
        "/nr/api/v1/t/{tid}/rules/{rule_id}": {
            "put": {
                "summary": "Update rule's attributes.",
                "tags": [
                    "Rules"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "$ref": "#/parameters/TenantID"
                    },
                    {
                        "$ref": "#/parameters/RuleID"
                    },
                    {
                        "name": "Rule information",
                        "in": "body",
                        "description": "Rule information.",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/UpdateRule"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Rule Updated"
                    },
                    "400": {
                        "description": "Validation errors"
                    },
                    "409": {
                        "description": "Rule already exists"
                    }
                }
            },
            "get": {
                "summary": "Read a rule.",
                "tags": [
                    "Rules"
                ],                
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "$ref": "#/parameters/TenantID"
                    },
                    {
                        "$ref": "#/parameters/RuleID"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Rule Updated"
                    },
                    "400": {
                        "description": "Validation errors"
                    },
                    "409": {
                        "description": "Rule already exists"
                    }
                }
            }
        },
        "/nr/api/v1/t/{tid}/rules/{rule_id}/conditions":{
            "put": {
                "summary": "Update rule's conditions",
                "tags": [
                    "Rules"
                ],
                "consumes": [
                    "application/json"
                ],

                "parameters": [
                    {
                        "$ref": "#/parameters/TenantID"
                    },
                    {
                        "$ref": "#/parameters/RuleID"
                    },
                    {
                        "name": "Conditions of Rule",
                        "in": "body",
                        "description": "Conditions of Rule.",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/SaveConditionsRule"
                        }  
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Rule's parameters updated"
                    },
                    "400": {
                        "description": "Validation errors"
                    },
                    "409": {
                        "description": "Rule already exists"
                    }
                }
            }
        },
        "/tenancy/api/v1/tenants": {
            "post": {
                "summary": "Create a New Tenant",
                "description": "Set ID, name and connection string options. Consider name field start with '<b>t.</b>'",
                "tags": [
                    "Tenancy"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Tenant Information",
                        "description": "Information about Tenant and Connection Options",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/NewTenant"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            }
        },
        "/nr/api/v1/tenancy/migration": {
            "post": {
                "summary": "Run Migration for Tenancy",
                "tags": [
                    "Migrations"
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Migration ran successfully"
                    },
                    "400": {
                        "description": "Error during migration"
                    }
                }
            }
        },
        "/nr/api/v1/t/{tid}/core/migration": {
            "post": {
                "summary": "Run Migration for NRule by Tenant",
                "tags": [
                    "Migrations"
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/text"
                ],
                "parameters": [
                    {
                        "$ref": "#/parameters/TenantID"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Migration ran successfully"
                    },
                    "400": {
                        "description": "Error during migration"
                    }
                }
            }
        },
        "/nr/api/v1/t/{tid}/hello": {
            "get": {
                "summary": "Run a Health Check to NRule API.",
                "description": "Set Tenant ID to determine DB Adapter. It will show migrations executed.",
                "parameters": [
                    {
                        "$ref": "#/parameters/TenantID"
                    }
                ],
                "tags": [
                    "Hello"
                ],
                "produces": [
                    "application/text"
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            }
        }
    },
    "parameters": {
        "TenantID":{
            "name": "tid",
            "description": "Tenant Identification",
            "in": "path",
            "type": "integer",
            "required": true
        },
        "RuleID":{
            "name": "rule_id",
            "description": "Rule Identification",
            "in": "path",
            "type": "string",
            "required": true
        },
        "PageNo":{
            "name": "pageNo",
            "description": "Number of Page.",
            "in": "query",
            "required": false,
            "type": "number"            
        },
        "PageSize":{
            "name": "pageSize",
            "description": "Page Size.",
            "in": "query",
            "required": false,
            "type": "number"
        }
    },
    "definitions": {
        "NewRule": {
            "type": "object",
            "properties": {
                "name": {
                    "description": "Rule name.",
                    "type": "string",
                    "required": true,
                    "minLength": 5,
                    "maxLength": 50,
                    "example": "ru.account.products"
                },
                "rule_type": {
                    "description": "Type of rule.",
                    "required": true,
                    "type": "string",
                    "enum": [
                        "CASE",
                        "TREE"
                    ],
                    "example": "CASE"
                },
                "strategy": {
                    "description": "Type of strategy.",
                    "required": true,
                    "type": "string",
                    "enum": [
                        "ALL",
                        "BASE",
                        "EARLY"
                    ],
                    "example": "EARLY"
                },
                "use_default": {
                    "description": "Use default case.",
                    "required": false,
                    "type": "boolean"
                },
                "parameters": {
                    "description": "Parameters for conditions and outputs.",
                    "required": true,
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "key": {
                                    "type": "string",
                                    "minLength": 5,
                                    "maxLength": 50,
                                    "required": true,
                                    "example": "quotationAmount"
                            },
                            "typeof": {
                                "type": "string",
                                "required": true,
                                "enum": ["JSON", "STRING", "NUMERIC", "DATE", "TIME", "DATETIME"],
                                "example": "STRING"
                            },   
                            "usefor": {
                                "type": "string",
                                "required": true,
                                "enum": ["CONDITION", "OUTPUT"],
                                "example": "CONDITION"
                            }
                        }
                    }
                }
            }
        },
        "UpdateRule": {
            "type": "object",
            "properties": {
                "strategy": {
                    "description": "Type of strategy.",
                    "required": true,
                    "type": "string",
                    "enum": [
                        "ALL",
                        "BASE",
                        "EARLY"
                    ],
                    "default": "BASE"
                }
            }
        },
        "SaveConditionsRule":{
            "type": "object",
            "properties": {
                "insert_conditions":{
                    "type":"array",
                    "items": {
                        "$ref": "#/definitions/ConditionsRule"
                    },
                    "required": "false"
                },
                "update_conditions":{
                    "type":"array",
                    "items": {
                        "$ref": "#/definitions/ConditionsRule"
                    },
                    "required": "false"
                }
            }
        },
        "ConditionsRule": {
            "type": "object",
            "properties": {
                "variable": {
                    "type": "string",
                    "minLength": 5,
                    "maxLength": 50,
                    "required": true,
                    "example": "quotationAmount"
                },
                "operator": {
                    "type": "string",
                    "required": true,
                    "enum": ["EQ", "NE", "GT", "GE", "LT", "LE", "IN", "NI", "BT"],
                    "default": "EQ"
                },
                "value": {
                    "type": "string",
                    "minLength": 5,
                    "maxLength": 50,
                    "required": true,
                    "example": "1000.98"
                },   
                "typeof": {
                    "type": "string",
                    "required": true,
                    "enum": ["STRING", "NUMERIC", "DATE", "TIME", "DATETIME"],
                    "default": "STRING"
                },  
                "is_active": {
                    "type": "boolean",
                    "default": true
                },
                "is_archived": {
                    "type": "boolean",
                    "default": false
                }
            }    
        },
        "NewTenant": {
            "type": "object",
            "properties": {
                "tenant_id": {
                    "description": "Tenant ID",
                    "type": "integer",
                    "required": true,
                    "minimum": 1,
                    "maximum": 99
                },
                "name": {
                    "description": "Tenant name.",
                    "type": "string",
                    "minLength": 5,
                    "maxLength": 50,
                    "required": true,
                    "example": "t.account.products"
                },
                "option_dev": {
                    "description": "Connection Option for Development Environment in Base64 format.",
                    "type": "string",
                    "minLength": 5,
                    "maxLength": 500,
                    "required": true,
                    "example": "bXlzcWwrcHlteXNxbDovL3Jvb3Q6bXlzZWNyZXRwd0Bsb2NhbGhvc3QvZGJuYW1l"
                },
                "option_test": {
                    "description": "Connection Option for Testing Environment in Base64 format.",
                    "type": "string",
                    "minLength": 5,
                    "maxLength": 500,
                    "required": true,
                    "example": "bXlzcWwrcHlteXNxbDovL3Jvb3Q6bXlzZWNyZXRwd0Bsb2NhbGhvc3QvZGJuYW1l"
                },
                "option_prod": {
                    "description": "Connection Option for Production Environment in Base64 format.",
                    "type": "string",
                    "minLength": 5,
                    "maxLength": 500,
                    "required": true,
                    "example": "bXlzcWwrcHlteXNxbDovL3Jvb3Q6bXlzZWNyZXRwd0Bsb2NhbGhvc3QvZGJuYW1l"
                }
            }
        }
    }
}
