{
    "swagger": "2.0",
    "info": {
        "title": " NRule - Rules Engine API",
        "version": "0.0.0",
        "description": "Rules Engine built for Gentera.\n t - Tenancy\n nr - NRule"
    },
    "paths": {
        "/nr/api/v1/t/{tid}/rules": {
            "post": {
                "summary": "Create a new rule.",
                "tags": [
                    "Rules"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "$ref": "#/parameters/TenantID"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {                            
                            "$ref": "#/definitions/NewRule"
                        }    
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Rule Created"
                    },
                    "400": {
                        "description": "Validation errors"
                    },
                    "409": {
                        "description": "Rule already exists"
                    }
                }
            },
            "get": {
                "summary": "Read all rules by page.",
                "tags": [
                    "Rules"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "$ref": "#/parameters/TenantID"
                    },
                    {
                        "$ref": "#/parameters/PageNo"
                    },
                    {
                        "$ref": "#/parameters/PageSize"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Rules detail"
                    },
                    "400": {
                        "description": "Validation errors"
                    },
                    "404": {
                        "description": "Rules not found"
                    }
                }
            }
        },
        "/nr/api/v1/t/{tid}/rules/{rid}": {
            "put": {
                "summary": "Update rule's attributes.",
                "tags": [
                    "Rules"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "$ref": "#/parameters/TenantID"
                    },
                    {
                        "$ref": "#/parameters/RuleID"
                    },
                    {
                        "$ref": "#/parameters/IdType"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/UpdateRule"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Rule Updated"
                    },
                    "400": {
                        "description": "Validation errors"
                    },
                    "409": {
                        "description": "Rule already exists"
                    }
                }
            },
            "get": {
                "summary": "Read one rule.",
                "tags": [
                    "Rules"
                ],                
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "$ref": "#/parameters/TenantID"
                    },
                    {
                        "$ref": "#/parameters/RuleID"
                    },
                    {
                        "$ref": "#/parameters/IdType"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Rule Updated"
                    },
                    "400": {
                        "description": "Validation errors"
                    },
                    "409": {
                        "description": "Rule already exists"
                    }
                }
            }
        },
        "/nr/api/v1/t/{tid}/rules/{rid}/nodes":{
            "post": {
                "summary": "Create a new node.",
                "tags": ["Nodes"],
                "consumes": ["application/json"],
                "parameters": [
                    {
                        "$ref": "#/parameters/TenantID"
                    },
                    {
                        "$ref": "#/parameters/RuleID"
                    },
                    {
                        "$ref": "#/parameters/IdType"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {                            
                            "$ref": "#/definitions/NewNode"
                        }    
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Case Created"
                    },
                    "400": {
                        "description": "Validation errors"
                    }
                }
            }
        },
        "/nr/api/v1/t/{tid}/rules/{rid}/cases": {
            "post": {
                "summary": "Create a new case.",
                "tags": ["Cases"],
                "consumes": ["application/json"],
                "parameters": [
                    {
                        "$ref": "#/parameters/TenantID"
                    },
                    {
                        "$ref": "#/parameters/RuleID"
                    },
                    {
                        "$ref": "#/parameters/IdType"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {                            
                            "$ref": "#/definitions/NewCase"
                        }    
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Case Created"
                    },
                    "400": {
                        "description": "Validation errors"
                    }
                }
            },
            "put": {
                "summary": "Update one or more cases.",
                "tags": ["Cases"],
                "consumes": ["application/json"],
                "parameters": [
                    {
                        "$ref": "#/parameters/TenantID"
                    },
                    {
                        "$ref": "#/parameters/RuleID"
                    },
                    {
                        "$ref": "#/parameters/IdType"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {                            
                            "$ref": "#/definitions/UpdCaseRule"
                        }    
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Case Updated"
                    },
                    "400": {
                        "description": "Validation errors"
                    }
                }
            }
        },
        "/nr/api/v1/t/{tid}/rules/{rid}/parameters":{
            "post": {
                "summary": "Create rule's parameters",
                "tags": [
                    "Parameters"
                ],
                "consumes": [
                    "application/json"
                ],

                "parameters": [
                    {
                        "$ref": "#/parameters/TenantID"
                    },
                    {
                        "$ref": "#/parameters/RuleID"
                    },
                    {
                        "$ref": "#/parameters/IdType"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/NewParametersRule"
                        }  
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Rule's conditions saved"
                    },
                    "400": {
                        "description": "Validation errors"
                    }
                }
            },
            "put": {
                "summary": "Update rule's parameters",
                "tags": [
                    "Parameters"
                ],
                "consumes": [
                    "application/json"
                ],

                "parameters": [
                    {
                        "$ref": "#/parameters/TenantID"
                    },
                    {
                        "$ref": "#/parameters/RuleID"
                    },
                    {
                        "$ref": "#/parameters/IdType"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/UpdateParametersRule"
                        }  
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Rule's conditions updated"
                    },
                    "400": {
                        "description": "Validation errors"
                    }
                }
            }
        },
        "/nr/api/v1/t/{tid}/rules/{rid}/cases/{cid}/kv-items":{
            "put": {
                "summary": "Update one or more KV Items",
                "tags": ["KV-Items"],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "$ref": "#/parameters/TenantID"
                    },
                    {
                        "$ref": "#/parameters/RuleID"
                    },
                    {
                        "$ref": "#/parameters/IdType"
                    },
                    {
                        "$ref": "#/parameters/CaseID"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/UpdKVItemsRule"
                        }  
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Rule's KV Items saved"
                    },
                    "400": {
                        "description": "Validation errors"
                    }
                }
            }
        },
        "/nr/api/v1/t/{tid}/rules/{rid}/cases/{cid}/conditions":{
            "put": {
                "summary": "Update one or more Conditions",
                "tags": ["Conditions"],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "$ref": "#/parameters/TenantID"
                    },
                    {
                        "$ref": "#/parameters/RuleID"
                    },
                    {
                        "$ref": "#/parameters/IdType"
                    },
                    {
                        "$ref": "#/parameters/CaseID"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/UpdConditionsRule"
                        }  
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Rule's Conditions saved"
                    },
                    "400": {
                        "description": "Validation errors"
                    }
                }
            }
        },
        "/nr/api/v1/t/{tid}/rules/{rid}/inventory": {
            "post": {
                "summary": "Create a rule's version into Inventory.",
                "tags": ["Inventory"],
                "consumes": ["application/json"],
                "parameters": [
                    {
                        "$ref": "#/parameters/TenantID"
                    },
                    {
                        "$ref": "#/parameters/RuleID"
                    },
                    {
                        "$ref": "#/parameters/IdType"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Inventory Created"
                    },
                    "400": {
                        "description": "Validation errors"
                    }
                }
            }
        },
        "/nr/api/v1/t/{tid}/catalog":{
            "get": {
                "summary": "Retrieve catalog used into API.",
                "tags": ["Catalog"],
                "parameters": [
                    {
                        "$ref": "#/parameters/TenantID"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Catalog"
                    },
                    "400": {
                        "description": "Validation errors"
                    }
                }
            }
        },
        "/tenancy/api/v1/tenants": {
            "post": {
                "summary": "Create a New Tenant",
                "description": "Set ID, name and connection string options. Consider name field start with '<b>t.</b>'",
                "tags": [
                    "Tenancy"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Tenant Information",
                        "description": "Information about Tenant and Connection Options",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/NewTenant"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            }
        },
        "/nr/api/v1/tenancy/migration": {
            "post": {
                "summary": "Run Migration for Tenancy",
                "tags": [
                    "Migrations"
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Migration ran successfully"
                    },
                    "400": {
                        "description": "Error during migration"
                    }
                }
            }
        },
        "/nr/api/v1/t/{tid}/core/migration": {
            "post": {
                "summary": "Run Migration for NRule by Tenant",
                "tags": [
                    "Migrations"
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/text"
                ],
                "parameters": [
                    {
                        "$ref": "#/parameters/TenantID"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Migration ran successfully"
                    },
                    "400": {
                        "description": "Error during migration"
                    }
                }
            }
        },
        "/nr/api/v1/t/{tid}/hello": {
            "get": {
                "summary": "Run a Health Check to NRule API.",
                "description": "Set Tenant ID to determine DB Adapter. It will show migrations executed.",
                "parameters": [
                    {
                        "$ref": "#/parameters/TenantID"
                    }
                ],
                "tags": [
                    "Hello"
                ],
                "produces": [
                    "application/text"
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            }
        }
    },
    "parameters": {
        "TenantID":{
            "name": "tid",
            "description": "Tenant Identification",
            "in": "path",
            "type": "integer",
            "required": true
        },
        "RuleID":{
            "name": "rid",
            "description": "Rule Identification",
            "in": "path",
            "type": "string",
            "required": true
        },
        "CaseID":{
            "name": "cid",
            "description": "Case Identification",
            "in": "path",
            "type": "string",
            "required": true
        },
        "ConditionID":{
            "name": "coi",
            "description": "Condition Identification",
            "in": "path",
            "type": "string",
            "required": true
        },
        "KVItemID":{
            "name": "kvi",
            "description": "Kv Item Identification",
            "in": "path",
            "type": "string",
            "required": true
        },
        "IdType":{
            "name": "ridType",
            "description": "Rule Identification Type.",
            "in": "query",
            "type": "string",
            "required": false,
            "enum": ["__external", "__internal"],
            "default": "__internal"
        },
        "PageNo":{
            "name": "pageNo",
            "description": "Number of Page.",
            "in": "query",
            "required": true,
            "type": "number"            
        },
        "PageSize":{
            "name": "pageSize",
            "description": "Number of elements by page.",
            "in": "query",
            "required": true,
            "type": "number"
        }
    },
    "definitions": {
        "NewRule": {
            "type": "object",
            "required": ["name", "rule_type", "strategy", "use_default", "parameters"],
            "properties": {
                "name": {
                    "description": "Rule name.",
                    "type": "string",
                    "minLength": 5,
                    "maxLength": 50,
                    "example": "ru.account.products"
                },
                "rule_type": {
                    "description": "Type of rule.",
                    "type": "string",
                    "enum": [
                        "TABLE",
                        "TREE"
                    ],
                    "example": "TABLE"
                },
                "strategy": {
                    "description": "Type of strategy.",
                    "type": "string",
                    "enum": [
                        "ALL",
                        "BASE",
                        "EARLY"
                    ],
                    "example": "EARLY"
                },
                "use_default": {
                    "description": "Use default case.",
                    "type": "boolean"
                },
                "parameters": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "required": ["key", "typeof", "usefor"],
                        "properties": {
                            "key": {
                                    "type": "string",
                                    "minLength": 5,
                                    "maxLength": 50,
                                    "example": "quotation_amount"
                            },
                            "typeof": {
                                "type": "string",
                                "enum": ["JSON", "STRING", "NUMERIC", "DATE", "TIME", "DATETIME"],
                                "example": "STRING"
                            },   
                            "usefor": {
                                "type": "string",
                                "enum": ["INPUT", "OUTPUT"],
                                "example": "INPUT"
                            }
                        }
                    }
                }
            }
        },
        "UpdateRule": {
            "type": "object",
            "required": ["strategy"],
            "properties": {
                "strategy": {
                    "description": "Type of strategy.",
                    "type": "string",
                    "enum": [
                        "ALL",
                        "BASE",
                        "EARLY"
                    ],
                    "default": "BASE"
                }
            }
        },
        "NewNode":{
            "type": "object",
            "required": ["is_active", "is_archived"],
            "properties": {
                "parent_node_id": {
                    "type": "string",
                    "description": "Parent Node ID"
                },
                "assign_node_to": {
                    "type": "string",
                    "description": "Assign node Left or Right",
                    "enum": ["LEFT", "RIGHT"],
                    "default": "RIGHT"
                }
            }
        },
        "NewCase":{
            "type": "object",
            "required": ["is_active", "is_archived"],
            "properties": {
                "is_active": {
                    "type": "boolean"
                },
                "is_archived": {
                    "type": "boolean"
                }
            }
        },
        "UpdCaseRule":{
            "type": "object",
            "properties": {            
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/UpdCase",
                        "minItems": 1
                    }
                }
            }
        },
        "UpdCase":{
            "type": "object",
            "required": ["id", "position", "is_active", "is_archived"],
            "properties": {
                "id": {
                    "type": "string"
                },
                "position":{
                    "type": "integer"
                },
                "is_active": {
                    "type": "boolean"
                },
                "is_archived": {
                    "type": "boolean"
                }
            }
        },
        "UpdConditionsRule":{
            "type": "object",
            "properties": {
                "items":{
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/UpdCondition"
                    }
                }
            }
        },
        "UpdCondition":{
            "type":"object",
            "required": ["variable", "case_id", "operator"],
            "properties": {
                "variable":{
                    "type":"string",
                    "minLength": 5,
                    "maxLength": 50,
                    "example": "var001"
                },
                "operator":{
                    "type":"string",
                    "enum": ["EQ", "NE", "LT", "LE", "GT", "GE", "IN", "NI", "BT"],
                    "default": "EQ"
                },
                "value":{
                    "type":"string",
                    "minLength": 5,
                    "maxLength": 50,
                    "example": "hello world"
                }
            }
        },
        "UpdKVItemsRule":{
            "type": "object",
            "properties": {
                "items":{
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/UpdKVItem",
                        "minItems": 1
                    }
                }
            }
        },
        "UpdKVItem":{
            "type": "object",
            "required": ["key", "case_id", "value", "calculation"],
            "properties": {
                "key":{
                    "type":"string",
                    "minLength": 5,
                    "maxLength": 50,
                    "example": "key001"
                },
                "value":{
                    "type":"string",
                    "maxLength": 500,
                    "example": "my_value_001"
                },
                "calculation":{
                    "type":"string",
                    "maxLength": 3,
                    "enum": ["ADD", "MOD"],
                    "default": "MOD"
                }
            }
        },
        "NewParametersRule":{
            "type": "object",
            "properties": {
                "input":{
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/NewParameter"
                    }
                },
                "output":{
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/NewParameter"
                    }
                }
            }
        },
        "UpdateParametersRule":{
            "type": "object",
            "properties": {
                "input":{
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/UpdParameter"
                    }
                },
                "outputs":{
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/UpdParameter"
                    }
                }
            }
        },
        "NewParameter": {
            "type": "object",
            "required": ["key", "typeof"],
            "properties": {
                "key": {
                    "type": "string",
                    "minLength": 5,
                    "maxLength": 50,
                    "example": "quotation_amount"
                },
                "typeof": {
                    "type": "string",
                    "enum": ["STRING", "NUMERIC", "DATE", "TIME", "DATETIME"],
                    "default": "STRING"
                }
            }    
        },
        "UpdParameter": {
            "type": "object",
            "required": ["key", "typeof", "is_active", "is_archived"],
            "properties": {
                "key": {
                    "type": "string",
                    "minLength": 5,
                    "maxLength": 50,
                    "example": "quotation_amount"
                },
                "typeof": {
                    "type": "string",
                    "enum": ["STRING", "NUMERIC", "DATE", "TIME", "DATETIME"],
                    "default": "STRING"
                },
                "is_active": {
                    "type": "boolean",
                    "default": "true"
                },
                "is_archived": {
                    "type": "boolean",
                    "default": "false"
                }
            }    
        },
        "NewTenant": {
            "type": "object",
            "required": ["tenant_id", "name", "option_dev", "option_test", "option_prod"],
            "properties": {
                "tenant_id": {
                    "description": "Tenant ID",
                    "type": "integer",
                    "minimum": 1,
                    "maximum": 99
                },
                "name": {
                    "description": "Tenant name.",
                    "type": "string",
                    "minLength": 5,
                    "maxLength": 50,
                    "example": "t.account.products"
                },
                "option_dev": {
                    "description": "Connection Option for Development Environment in Base64 format.",
                    "type": "string",
                    "minLength": 5,
                    "maxLength": 500,
                    "example": "bXlzcWwrcHlteXNxbDovL3Jvb3Q6bXlzZWNyZXRwd0Bsb2NhbGhvc3QvZGJuYW1l"
                },
                "option_test": {
                    "description": "Connection Option for Testing Environment in Base64 format.",
                    "type": "string",
                    "minLength": 5,
                    "maxLength": 500,
                    "example": "bXlzcWwrcHlteXNxbDovL3Jvb3Q6bXlzZWNyZXRwd0Bsb2NhbGhvc3QvZGJuYW1l"
                },
                "option_prod": {
                    "description": "Connection Option for Production Environment in Base64 format.",
                    "type": "string",
                    "minLength": 5,
                    "maxLength": 500,
                    "example": "bXlzcWwrcHlteXNxbDovL3Jvb3Q6bXlzZWNyZXRwd0Bsb2NhbGhvc3QvZGJuYW1l"
                }
            }
        }
    }
}
