{
    "swagger": "2.0",
    "info": {
        "title": " NRule - Rules Engine API",
        "version": "0.0.0",
        "description": "Rules Engine built for Gentera.\n t - Tenancy\n nr - NRule"
    },
    "paths": {
        "/nr/api/v1/t/{tid}/rules/{rule_id}": {
            "put": {
                "summary": "Update a rule.",
                "tags": [
                    "Rules"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "tid",
                        "description": "Tenant ID",
                        "in": "path",
                        "type": "integer",
                        "required": true
                    },
                    {
                        "name": "rule_id",
                        "description": "Rule Identification",
                        "in": "path",
                        "type": "integer",
                        "required": true
                    },
                    {
                        "name": "Rule Data",
                        "in": "body",
                        "description": "Rule definition.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Update Rule"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Rule Updated"
                    },
                    "400": {
                        "description": "Validation errors"
                    },
                    "409": {
                        "description": "Rule already exists"
                    }
                }
            },
            "get": {
                "tags": [
                    "Rules"
                ],
                "description": "Read a rule.",
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "tid",
                        "description": "Tenant ID",
                        "in": "path",
                        "type": "integer",
                        "required": true
                    },
                    {
                        "name": "rule_id",
                        "description": "Rule Identification",
                        "in": "path",
                        "type": "integer",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Rule Updated"
                    },
                    "400": {
                        "description": "Validation errors"
                    },
                    "409": {
                        "description": "Rule already exists"
                    }
                }
            }
        },
        "/nr/api/v1/t/{tid}/rules": {
            "post": {
                "summary": "Create a new rule.",
                "tags": [
                    "Rules"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "tid",
                        "description": "Tenant ID",
                        "in": "path",
                        "type": "integer",
                        "required": true
                    },
                    {
                        "name": "Rule Data",
                        "in": "body",
                        "description": "Rule definition.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/New Rule"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Rule Created"
                    },
                    "400": {
                        "description": "Validation errors"
                    },
                    "409": {
                        "description": "Rule already exists"
                    }
                }
            },
            "get": {
                "summary": "Read All Rules.",
                "tags": [
                    "Rules"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "tid",
                        "description": "Tenant ID",
                        "in": "path",
                        "type": "integer",
                        "required": true
                    },
                    {
                        "name": "pageNo",
                        "description": "Number of Page.",
                        "in": "query",
                        "required": false,
                        "type": "number"
                    },
                    {
                        "name": "pageSize",
                        "description": "Page Size.",
                        "in": "query",
                        "required": false,
                        "type": "number"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Rules detail"
                    },
                    "400": {
                        "description": "Validation errors"
                    },
                    "404": {
                        "description": "Rules not found"
                    }
                }
            }
        },
        "/nr/api/v1/t/{tid}/workflows": {
            "post": {
                "summary": "Create a new Workflow base.",
                "tags": [
                    "Workflows"
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Workflow Data",
                        "in": "body",
                        "description": "Workflow definition.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/New Workflow"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Workflow created"
                    },
                    "400": {
                        "description": "Invalid request data"
                    }
                }
            }
        },
        "/nr/api/v1/t/{tid}/kvs/{kid}/items": {
            "put": {
                "summary": "Create or Update a KV Item.",
                "tags": [
                    "Key-Value Storage"
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "tid",
                        "description": "Tenant ID",
                        "in": "path",
                        "type": "integer",
                        "required": true
                    },
                    {
                        "name": "kid",
                        "description": "KV Identifier",
                        "in": "path",
                        "type": "integer",
                        "required": true
                    },
                    {
                        "name": "KV Item data",
                        "in": "body",
                        "description": "KV Item definition.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/New KV Item"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "KVS created"
                    },
                    "400": {
                        "description": "Invalid request data"
                    }
                }
            }
        },
        "/nr/api/v1/t/{tid}/kvs": {
            "post": {
                "summary": "Create a new Key Value container.",
                "description": "This Storage can be hosted in a specialized database.",
                "tags": [
                    "Key-Value Storage"
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "tid",
                        "description": "Tenant ID",
                        "in": "path",
                        "type": "integer",
                        "required": true
                    },
                    {
                        "name": "KVS data",
                        "in": "body",
                        "description": "KVS definition.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/New KV"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "KVS created"
                    },
                    "400": {
                        "description": "Invalid request data"
                    }
                }
            }
        },
        "/tenancy/api/v1/tenants": {
            "post": {
                "summary": "Create a new Tenant",
                "tags": [
                    "Tenancy"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Tenant Information",
                        "description": "Information about Tenant and Connection Options",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/New Tenant"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            }
        },
        "/nr/api/v1/t/{tid}/hello": {
            "get": {
                "summary": "Execute a Health Check to NRule API & multiple tenancy Databases.",
                "tags": [
                    "Hello"
                ],
                "produces": [
                    "application/text"
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            }
        },
        "/migration/api/v1/tenancy": {
            "post": {
                "summary": "Run Migration for Tenancy",
                "tags": [
                    "Migrations"
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Migration ran successfully"
                    },
                    "400": {
                        "description": "Error during migration"
                    }
                }
            }
        },
        "/migration/api/v1/t/<tid>/nrule": {
            "post": {
                "summary": "Run Migration for NRule by Tenant",
                "tags": [
                    "Migrations"
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/text"
                ],
                "parameters": [
                    {
                        "name": "tid",
                        "description": "Tenant ID",
                        "in": "path",
                        "type": "integer",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Migration ran successfully"
                    },
                    "400": {
                        "description": "Error during migration"
                    }
                }
            }
        }
    },
    "definitions": {
        "New Rule": {
            "type": "object",
            "properties": {
                "name": {
                    "description": "Rule name.",
                    "type": "string",
                    "minLength": 5,
                    "maxLength": 50,
                    "required": true,
                    "example": "ru.account.products"
                },
                "expression": {
                    "description": "Expression.",
                    "type": "string",
                    "minLength": 5,
                    "maxLength": 2000,
                    "required": true
                }
            }
        },
        "Update Rule": {
            "type": "object",
            "properties": {
                "name": {
                    "description": "Rule name.",
                    "type": "string",
                    "minLength": 5,
                    "maxLength": 50,
                    "required": true,
                    "example": "ru.account.products"
                },
                "expression": {
                    "description": "Expression.",
                    "type": "string",
                    "minLength": 5,
                    "maxLength": 2000,
                    "required": true
                }
            }
        },
        "New Workflow": {
            "type": "object",
            "properties": {
                "name": {
                    "description": "Workflow name.",
                    "type": "string",
                    "minLength": 5,
                    "maxLength": 50,
                    "example": "wf.account.products"
                },
                "typeof": {
                    "description": "Type of Workflow. Default = BASE.",
                    "type": "string",
                    "enum": [
                        "BASE",
                        "FULL",
                        "NODE"
                    ]
                },
                "action_id_ok": {
                    "description": "Action ID for success result.",
                    "type": "integer",
                    "required": false
                },
                "action_id_nok": {
                    "description": "Action ID for failure result.",
                    "type": "integer",
                    "required": false
                }
            }
        },
        "New KV": {
            "type": "object",
            "properties": {
                "name": {
                    "description": "KV name.",
                    "type": "string",
                    "minLength": 5,
                    "maxLength": 50,
                    "required": true,
                    "example": "kv.account.products"
                }
            }
        },
        "New KV Item": {
            "type": "object",
            "properties": {
                "key": {
                    "description": "Key of Item.",
                    "type": "string",
                    "minLength": 5,
                    "maxLength": 50,
                    "required": true
                },
                "value": {
                    "description": "Value of Item.",
                    "type": "string",
                    "minLength": 5,
                    "maxLength": 500,
                    "required": true
                },
                "typeof": {
                    "description": "Type of Item.",
                    "type": "string",
                    "minLength": 5,
                    "maxLength": 50,
                    "required": true
                }
            }
        },
        "New Tenant": {
            "type": "object",
            "properties": {
                "tenant_id": {
                    "description": "Tenant ID",
                    "type": "integer",
                    "required": true,
                    "minimum": 1,
                    "maximum": 99
                },
                "name": {
                    "description": "Tenant name.",
                    "type": "string",
                    "minLength": 5,
                    "maxLength": 50,
                    "required": true,
                    "example": "t.account.products"
                },
                "option_dev": {
                    "description": "Connection Option for Development Environment in Base64.",
                    "type": "string",
                    "minLength": 5,
                    "maxLength": 500,
                    "required": true,
                    "example": "bXlzcWwrcHlteXNxbDovL3Jvb3Q6bXlzZWNyZXRwd0Bsb2NhbGhvc3QvZGJuYW1l"
                },
                "option_test": {
                    "description": "Connection Option for Testing Environment in Base64.",
                    "type": "string",
                    "minLength": 5,
                    "maxLength": 500,
                    "required": true,
                    "example": "bXlzcWwrcHlteXNxbDovL3Jvb3Q6bXlzZWNyZXRwd0Bsb2NhbGhvc3QvZGJuYW1l"
                },
                "option_prod": {
                    "description": "Connection Option for Production Environment in Base64.",
                    "type": "string",
                    "minLength": 5,
                    "maxLength": 500,
                    "required": true,
                    "example": "bXlzcWwrcHlteXNxbDovL3Jvb3Q6bXlzZWNyZXRwd0Bsb2NhbGhvc3QvZGJuYW1l"
                }
            }
        }
    }
}